[["index.html", "实用编程入门指南 前言", " 实用编程入门指南 郝鸿涛 2021-02-19 前言 这本电子书旨在帮助没有任何编程基础的人了解几个比较关键的问题：什么是编程、编程能用来干什么、编程都需要用到那些工具、都有哪些主要的编程语言、这些语言能干什么、这些语言怎么学和怎么用。 "],["prep.html", "第 1 章 前期准备 1.1 GitHub 1.2 终端 1.3 文本编辑器 1.4 英语", " 第 1 章 前期准备 1.1 GitHub 请注册一个 GitHub 账号，编程的入门票。用户名请认真起。如果你之后建个人网站不想买域名的话，你可以用免费的 你的用户名.github.io。所以如果用户名起得很丑的话，你个人网站的未来网址相应地也会很丑。 1.2 终端 如果你用的是苹果系统或者 Linux 系统，终端 (Terminal) 是自带的。如果你用的是 Windows 系统，终端的选取可以看看 这个讨论。我不怎么用 Windows，所以不是特别了解。上述讨论中 powershell, cmder, wsltty 和 git bash 出现的频率比较高。你可以自己试试看哪个好用。 1.3 文本编辑器 文本编辑器 (Text Editor) 是程序员用来吃饭的家伙。每个人的喜好不同，Sublime Text, Atom , VS Code 和 vim 这四个貌似很多人用，而且都是免费的。我个人比较习惯用 Sublime Text。 请随便挑一个，然后下载下来，我们之后会用到。 1.4 英语 如果你对编程是认真的，不要抗拒学英语。你现在看到的主要编程语言，Java, Python, Ruby, Go, JavaScript, R, C 等都是西方人创造的，因此最主要和最新的学习资料肯定是英文的。编译类的教材在一定程度上可以缓解这个问题，但当资料非常新的时候，你只能眼巴巴地等翻译。其次，GitHub 上主要开源项目的文档是英文的，这个估计不会有人会去翻译。如果你看不懂，就没办法使用，在使用中碰到问题也没办法跟原作者沟通。另外，学编程就是一个持续不断碰到问题、解决问题的过程，而很多你碰到的问题早就有人在 StackOverflow上（用英语）问过和回答过了。 "],["markdown.html", "第 2 章 Markdown 试水 2.1 Markdown 编辑器 2.2 Markdown 语法讲解 2.3 Markdown 练习", " 第 2 章 Markdown 试水 一提到办公，从小被要求学 Word, Excel, 和 PowerPoint 的大多数人也就是能想到这三种工具了。放到十年前，也许没什么问题，但是现在我们并非离开它们就活不下去了。而且，对编程来说，这几样工具并不是最合适的。 我们先来看处理文字的一项利器： Markdown. Markdown 相比 Word 有什么好处呢？第一，非常简单，5分钟就能学会。第二，Markdown 就是为网页而生的，应用型极强。配合 Rmarkdown 和 Pandoc 等工具，Markdown 可以非常便捷地在 HTML 和 PDF 之间转化。Markdown 的文件格式缩写是 md。 以下两篇文章非常好地总结了 Markdown 的基本语法： Markdown 是个啥, 来自统计之都，作者是 谢益辉 Markdown 基本语法, 作者是 younghz 如果你不介意看英文资料的话， Markdown Cheatsheet，作者是 adam-p 2.1 Markdown 编辑器 你可以用上一节提到的文本编辑器来写 Markdown 文件，缺点是你看不到实时的结果。如果你想看到实时的效果，我推荐用 Typora, 开源、轻巧、免费、主题多样，而且可以非常方便得转成 HTML 和 PDF。你也可以在 stackedit.io 在线写 Markdown 文件。如果你平常用 Markdown 比较多，推荐用 Typora 在本地写。不过我自己很少用 Typora, 实时预览的效果的确好，但是当你想修改内容的时候，你会发现很不方便。 想看一下效果的话，你可以看看我用 Typora 写的 Markdown 文本，转成 HTML 和 PDF 后的样子。 2.2 Markdown 语法讲解 2.2.1 标题 如下所示，第几级标题就在前面加几个 # 号。 # 第一级标题 ## 第二级标题 ### 第三级标题 #### 第四级标题 ##### 第五级标题 ###### 第六级标题 2.2.2 粗体、斜体 - **粗体** - *斜体* - ***粗斜体*** - ~~删除~~ 粗体 斜体 粗斜体 删除 2.2.3 列表 - Water 列表内想有缩进内容，但是不想让内容前有列表标记的话，只需要在这一行空三格。 - Water - Water 1. Water 2. Water 3. Water - Water - Water - Water - Water 1. Water 2. Water Water 列表内想有缩进内容，但是不想让内容前有列表标记的话，只需要在这一行空三格。 Water Water Water Water Water Water Water Water Water Water Water 如果你想让列表内容空格大一些，只需要在每行之间加入空行就好。比如： - Water - Water - Water Water Water Water 2.2.4 表格 | Water | *Water* | Water | |---------|---------|---------| | Water | `Water` | Water | | **Water** | Water^[Water] | Water | | Water | Water | Water | Water Water Water Water Water Water Water Water 1 Water Water Water Water 如果你不会自己打出 Markdown 表格，可以试试这个傻瓜式 Markdown 表格生成器。 2.2.5 引语 &gt; 知之为知之，不知为不知，是知也 ^[你知道最后一个「知」怎么念吗？]。 — 孔子 知之为知之，不知为不知，是知也 2。 — 孔子 2.2.6 链接 这是[一个链接](https://github.com/). 这是一个链接, 2.2.7 插入图片 ![GitHub](https://www.analyticsvidhya.com/wp-content/uploads/2015/07/github_logo.png) GitHub 有同学会问， [] 为什么还要加内容呢？直接在 () 加入链接不就好了吗？不完全是。我一开始也不理解为什么还需要 []。现在，我的理解是，[] 里的内容是对要加入图片的解释。什么时候会用到呢？两种情况： 你输入的图片链接失效。这个其实挺常见的。除非你是本地图片，你自己可以掌控。如果像上面一样，是用的网上的链接，那这个链接随时可能失效。失效后别人就无法知道你插入的图片内容是什么。如果你在 [] 有图说的话，浏览器会在图片位置显示你的图说； 谢益辉 在 他的博客 中提到 3，[] 里面的内容可以被专用浏览器读给盲人用户。 2.2.8 代码 代码可以分成两种。一种是代码标记，比如：`Print(&quot;Nihao&quot;)` 代码可以分成两种。一种是代码标记，比如：Print(\"Nihao\") 另一种是「代码块」： // JavaScript 代码： water = [1, 2, 3, 4, 5] let a = 0; for (let i = 0; i &lt; 5; i++){ if (water[i] &gt; 3) { a += 1 } } // 请问 a 的值现在是多少呢？ 我在这里没法展示源代码，只能像上面一样展示结果。源代码可以参考 这里。 2.2.9 注释 注释只需要在需要注释文字的后面加 ^[这里输入注释文字]。这个上面其实已经有例子了。不过我再举一个： 你好吗 ^[在中国常用的问候语]？ 你好吗 4？ 2.2.10 HTML 最重要的一点，Markdown 可以识别 HTML 代码。也就是说，你把 Markdown 当成 HTML 来写也可以。 比如，插入图片时，Markdown 本身的 ![]() 是不支持你加入图片说明文字的 5。这时候你就可以直接用原生的 HTML 代码： &lt;figure&gt; &lt;img src=&quot;https://www.analyticsvidhya.com/wp-content/uploads/2015/07/github_logo.png&quot; alt=&quot;GitHub&quot;/&gt; &lt;figcaption&gt;这里添加图片说明文字&lt;/figcaption&gt; &lt;/figure&gt; 以上代码来自 https://stackoverflow.com/a/19360305。 2.2.11 分隔线 *** 或者 --- 或者 2.3 Markdown 练习 请用 Markdown 写出如下文稿。需要注意的是： 标题前、脚注上的序号不用管 个人照片下的文字「王大锤的个人照片」在最后结果中有没有无所谓 你可以在 https://stackedit.io/app# 在线制作，也可以使用 Typora 在本地制作。不过， Typora 的脚注 比较麻烦一些。 2.3.1 王大锤简历 以上是一级标题，以下全都是二级标题。 免责声明：以下内容部分参考百度百科 王大锤 这一次词条解释。 2.3.1.1 基本信息 身高：170 体重：60 公斤 6 性别：男 7 出生日期：2000年0月0日 出演作品 《万万没想到》 《暴走大事件》 2.3.1.2 个人照片 王大锤个人照片 图片出处 2.3.1.3 作品简介 角色 形象 元素 刘备 自恋 搞笑 月老童子 幻想 职场 富二代 眼高手低 感情 2.3.1.4 常用语 万万没想到 — 王大锤 Water↩︎ 你知道最后一个「知」怎么念吗？↩︎ 抱歉，我忘记具体哪一篇了↩︎ 在中国常用的问候语↩︎ 你现在看到的内容是 bookdown 渲染出来的效果，所以上面 那副图底下你能看到[] 里面的内容成了文字说明。↩︎ 注意：「公斤」是斜体。↩︎ 注意：「男」是粗体。↩︎ "],["html-basics.html", "第 3 章 HTML 基本知识 3.1 Windows 系统安装 Git 3.2 网页部署 3.3 更新内容 3.4 HTML", " 第 3 章 HTML 基本知识 如果使用 Typora 完成的之前布置的Markdown 的作业，答案请参考这里。请检查下是否和你的答案一致。 用 Typora 打开这份 Markdown 文档后，选择 文件 (File) \\(\\to\\) 导出 (Export) \\(\\to\\) HTML (without styles). 导出后的 HTML 文档应该是这样。 用浏览器打开这份 HTML 文档，你可以看到和你在 2.3 Markdown 练习中 看到的结果一致。你现在看到的就是一个最基本的网页了。 3.1 Windows 系统安装 Git 我们接下来要用到 Git。苹果电脑已经预装了 Git, 所以不需要提前准备。使用Windows 系统的同学，需要先安装 Git。 首先，按照这个步骤看一下你的电脑系统类型是32位还是64位。然后点击这里，根据你电脑的系统类型，在 Git for Windows Setup 这个选项里，相应地下载安装 32 位 或者 64 位。 下载好之后的 Git 安装过程请参考 这里。需要注意的是，上面这个教程是根据 Git 2.24.02 做的，如果你刚才下载的 Git 版本号和这个不一样，具体的步骤可能有一些差异。比如，2021年1月14号更新的 Git 2.30.0.2 版本，在安装时，第 7 步 是上面那个教程的第 6 步，而新版本的第 6 步是 Adjusting the name of the initial branch in new repositories, 你直接选择默认的 Let Git decide 就好。同样，新版本安装时让你 Choose the default behavior of git pull 时，你也选择默认的 Default (fast-foward or merge) 就好。 总之一句话，参考上面的教程，安装过程中如果有和教程中提到的步骤不一样的情况，直接选择默认的选项。 Git 安装好之后，就可以打开 Git Bash 了。我们接下来要用到。 3.2 网页部署 在讲解 HTML 只是之前，我们先把刚才的网页放到网上。别人能看到的网页才是真正的网页。 第一步，在你的电脑上创建一个文件夹，将其命名为 wangdachui。然后把刚才导出的 HTML 文件重新命名为 index.html 并放到 wangdachui 这个文件夹。 第二步，请确保你已经有了一个 GitHub 账号。登陆之后，在屏幕右上角你的 GitHub 头像左侧有一个 \\(+\\) 的标志。点击它，然后选择 New repository。在出现的页面中，在 Repository name 那里填上 wangdachui 或者任何你觉得合适的名字。其它都不要动，然后点击 Create repository。在随后出现的页面中，在 “Quick setup — if you’ve done this kind of thing before” 下面那一行，HTTP/SSH 后面有个网址，应该是 https://github.com/hongtaoh/wangdachui.git 这样的形式。把这个网址复制下来。 Figure 3.1: 登陆 GitHub 之后，选择 New repository Figure 3.2: 新建仓库设置 Figure 3.3: 新建仓库 URL 第三步，打开你电脑上的终端。苹果电脑请打开 Terminal, 如果你连 Terminal 怎么打开都不知道，请看这里。使用 Windows 系统的同学，请打开 Git Bash。 打开终端之后： 如果你是第一次使用 git, 你可能需要设置一些内容。在终端输入 git config --global user.name \"你的git用户名\", 以及 git config --global user.email \"你的邮箱\"。用你的 GitHub 用户名和与 GitHub 绑定的邮箱应该就可以。不懂的话，请参考 这里 或 这里。 使用苹果电脑的同学，我建议你把 wangdachui 这个文件夹拖到桌面上，然后在 Terminal 中输入： cd Desktop/wangdachui 使用 Windowns 系统的同学，在 Git Bash 中输入： cd H:\\wangdachui 如果你不确定路径是什么，输完 cd 之后，按一下空格，然后直接把 wangdachui 这个文件夹拖到终端中，路径会自动显示出来。 cd 是英文 change directory 的缩写。change directory 的意思是「改变路径」，也就是告诉终端之后我们要输入的代码要作用于哪一个项目。 现在，请拿出刚才你复制的类似 https://github.com/hongtaoh/wangdachui.git 的网址链接，我们接下来要用到。如果你的仓库名也是 wangdachui 的话，那么 https://github.com/hongtaoh/wangdachui.git 这个链接中你只需要把我的 GitHub 用户名 hongtaoh 换成你的就行。 随后，不管你的电脑是什么系统，请在你的终端中输入： git init git add . git commit -m &quot;my first commit.&quot; git remote add origin https://github.com/hongtaoh/wangdachui.git # 请注意，https://github.com/hongtaoh/wangdachui.git 一定要替换为你自己的链接！！！ git push -u origin master 这个代码块你直接复制粘贴就行。粘贴完之后，按一下回车键。 上面几行代码需要注意的是： git init 是创建一个 git 项目。init 应该是 initiate 的缩写。 git add .: 最后的那个点请不要忘记。那个点和 add 之间的空格也不要落下。这行代码是告诉 git，刚才新加的全部内容都要上传。 git commit -m \"my first commit.\" 是为这次上传添加备注。一个 git 项目我们可能要上传很多次，每次上传不同的内容。给每次上传添加备注可以让我们之后了解每次上传的内容是什么。 第四行代码一定要替换为你自己的链接！！！！！！ 使用 Windows 系统的同学，如果你是第一次使用 Git，按完回车后，因为最后一步是往 GitHub 上传内容，你会被要求登陆 (Sign in) GitHub, 点击 Sign in with your browser 就可以，然后你会被要求 Authorize Git Credential Manager，点击绿色的 Authorize GitCredentialManager，在随后的页面中输入你的 GitHub 密码 (password)。随后，可能还会出现 OpenSSH 的页面，让你输入 GitHub 用户名 (Username for ‘https://github.com’:)，按要求输入然后点击 OK 就好。Show input 可点可不点，点开的话你就可以看到你输的内容。 上面的代码运行结束后，回到 GitHub, 点开 wangdachui 这个项目，不出意外的话，你会看到 index.html 已经躺在你刚创建的仓库里了。 Figure 3.4: index.html 上传成功的页面 现在，请点击上面那个图片中的 Settings。进入 Settings 页面后，一直往下拖，到你看到 GitHub Pages 为止。在 Source 下面，点击那个 None, 选择 master, 在 master 右侧那里选择 /(root), 然后点击 Save, 你应该能看到 “Your site is ready to be published at http://你的用户名.github.io/wangdachui/”。稍微等一分钟，刷新网页，当这行字变为绿底，内容变为 “Your site is published at …” 时，点击那个网址，不出意外的话，你应该就能看到我们刚才那个网页内容了。现在，任何知道你这个网址的人都可以打开这个网页。 Figure 3.5: 点击 None, 选择 master Figure 3.6: 部署成功后的页面 3.3 更新内容 一个现实的问题是，假如 wangdachui 这个仓库放的是你的个人网站，那么你需要经常更新内容。内容更新之后如何上传这些变动？这是这一节我们要讲的问题。 首先，回到你电脑上 wangdachui 文件夹里的 index.html这个文件。右键 \\(\\to\\) 打开方式，然后用你之前选择并下载好的文本编辑器打开 index.html 这个文件。需要注意的是要用文本编辑器打开，而不是默认的浏览器打开，因为我们接下来要编辑这个文档。 打开之后，把 王大锤简历 改成 王大锤的简历，然后点击 ctrl + s （苹果电脑是 command + s) 保存。 保存之后，直接打开 index.html，在浏览器中你能看到内容已经有变更。现在，我们如何把这个改动后的文档上传到 GitHub? 打开终端 (Git Bash 或者 Terminal)，首先用把路径改到 wangdachui 这个文件夹。我们上面讲过，需要用到 cd。路径改好后，回忆一下我们之前是怎么把最初的文件上传到 GitHub 的。 我们首先是用了 git init。这一行的命令是在创建一个新的 git 项目。我们已经创建了，所以不需要再输它。 git add . 我们在更新内容时依旧需要。为什呢？git add . 的意思是「添加刚才新加入的全部内容」。我们第一次用 git add . 时，新加的内容是整个 index.html，所以它被上传。这次我们新加的内容是一个「的」字。 假设在你的 wangdachui 文件夹中除了 index.html 还有一个 README.md，你对两个文件都做了更新，但是你只想上传 README.md 的更新，index.html 暂时不更新，该怎么办呢？只需要把 git add . 替换成 git add README.md 就可以了。 我们接着看，git commit -m \"your messsage here\" 也是需要的。这行代码是给我们这次的内容更新做记录，所以依旧需要。 再来，git remote add origin ... 就不需要了。为什么呢？因为这行代码的目的是给我们的本地文件夹创建一个远程的 git 项目。我们刚才已经创建了，所以这次不需要再创建。 所谓「远程 git 项目」在这里就是指你 GitHub 上的那个 wangdachui 仓库。 最后，git push -u origin master 这一行代码的目的是把我们刚才的变动上传到我们创立的远程仓库中的 master 分支 (branch)。origin 在这里指的就是我们那个远程仓库。不过，这里需要注意的是，git push -u origin master 一般是第一次上传的时候用，之后只用 git push origin master 就可以。想了解具体情况，请看这个帖子。 总结一下，我们需要用： git add . git commit -m &quot;更新内容&quot; git push origin master 3.3.1 经常更新怎么办 如果我们需要经常更新内容，老是重复上面的三行代码会很麻烦，有没有更简单的办法呢？ 现在，请打开你喜欢用的文本编辑器 (text editor)，把上面的三行代码复制粘贴，然后把文件保存为 deploy.sh。不一定非要用 deploy 这个名字，你换别的也行，不过最后的那个 .sh 后缀一定要用。保存完之后，把 deploy.sh 这个文件放到 wangdachui 这个文件夹之下。 每次我们更新完内容后，在用 cd 改变路径到 wangdachui 这个文件夹之后，只需要在终端中输入 bash deploy.sh 有个问题是，git commit -m \"更新内容\" 最好可以换成 git commit -m &quot;$(date)&quot; 这样我们之后就知道每次更新是在什么时间进行的。 3.4 HTML 现在我们开始正式讲解 HTML 基本知识。 首先，如果 2.3 Markdown 练习 你是在 https://stackedit.io/app 在线制作的，现在请用 Typora 重新做一遍。 完成后再用 Typora 把这份 Markdown 文档导出为 HTML (without styles)。一定要选择「无格式」，因为我们接下来要学习导出的 HTML 内容，如果带格式的话太复杂，不利于我们初期学习。不会导出的同学，请看这一章开头的讲解。 导出成功后，首先用你选择的文本编辑器打开这份 wangdachui.html，然后再用浏览器打开它。 以下我提到 wangdachui.html 时，除非特殊说明，都是指你用文本编辑器（而非浏览器）打开后看到的内容。 3.4.1 我们先来看「个人照片」之前的部分 &lt;!doctype html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=&#39;UTF-8&#39;&gt;&lt;meta name=&#39;viewport&#39; content=&#39;width=device-width initial-scale=1&#39;&gt; &lt;title&gt;wangdachui&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;王大锤简历 &lt;/h1&gt; &lt;p&gt;以上是一级标题，以下全都是二级标题。&lt;/p&gt; &lt;p&gt;免责声明：以下内容部分参考百度百科 &lt;a href=&#39;https://baike.baidu.com/item/%E7%8E%8B%E5%A4%A7%E9%94%A4&#39;&gt;王大锤&lt;/a&gt; 这一次词条解释。&lt;/p&gt; &lt;h2&gt;基本信息&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;身高：170&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;体重：60 &lt;em&gt;公斤&lt;/em&gt; &lt;sup class=&#39;md-footnote&#39;&gt;&lt;a href=&#39;#dfref-footnote-1&#39; name=&#39;ref-footnote-1&#39;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;性别：&lt;strong&gt;男&lt;/strong&gt; &lt;sup class=&#39;md-footnote&#39;&gt;&lt;a href=&#39;#dfref-footnote-2&#39; name=&#39;ref-footnote-2&#39;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;出生日期：&lt;del&gt;2000年0月0日&lt;/del&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;出演作品&lt;/p&gt; &lt;ol start=&#39;&#39; &gt; &lt;li&gt;《万万没想到》&lt;/li&gt; &lt;li&gt;《暴走大事件》&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ul&gt; 如何你打开后发现你的文档和上面的内容长得不一样，不用担心。对 HTML 而言，空格、空行都只是为了让人容易理解。在计算机眼里，上面的全部代码就算写成一行也无所谓。 上面的几行 HTML 代码被计算机解析的结果，就是你在浏览器里看到的「王大锤简历」往下、「个人照片」往上的部分。 我们一个一个来看： &lt;!doctype html&gt; 这行代码是让浏览器知道这份文档是 HTML。 &lt;html&gt; 的作用是把整个 HTML 文档的内容（除了 &lt;!doctype html&gt;）环绕起来。你在 wangdachui.html 的最底端能看到 &lt;/html&gt;。&lt;html&gt; 和 &lt;/html&gt; 之间的内容，就是 HTML 文档的内容。 &lt;head&gt; 里面放的是元数据。所谓元数据是指「关于数据的数据」。现阶段你只需要知道它里面可以包括 &lt;title&gt;标签，也就是标题。现在请看你的浏览器，如果你现在只打开了一个页面，请随便再打开一个网址。当你在两个页面之前切换的时，在你鼠标点击的位置就能看到 &lt;title&gt; 和 &lt;/title&gt; 之间的内容。 &lt;body&gt; 和 &lt;/body&gt; 之间的部分是我们用浏览器一份 HTML 文档后能看到的内容。 h1, h2, h3, … 是不同级别的标题。 h1 是一级标题，h2 是二级标题，h3 是三级标题，依此类推。最小的标题是 h6。数字越小，级别越高，字号越大。 p：段落 &lt;a&gt;：超链接 ul, or, li: 列表。ul(unordered list) 是无序列表，or (ordered list) 是带数字的那种有序列表。不管是有序列表，还是无序列表，列表中的每一项都需要用 li 来表示。 em：斜体。em 是 emphasize 的缩写。 strong 或者 b: 粗体。b 是 bold 的缩写。 以上就是「个人照片」之前的部分中我们需要学到的东西。 3.4.2 「个人照片」之后的部分 3.4.2.1 img img：插入图片。img 标签有两个必需的属性： src：source (来源) 的缩写，用于提示图片地址，可以直接插入网址，或者本地图片地址。 alt： 图片说明。我们之前讲过，当图片无法显示，比如链接失效时，别人可以通过alt 里的内容来大体了解你这个图片是什么。还有一种情形是，专用浏览器可以通过读出 alt 里的内容来让盲人用户了解你的图片内容。 除此之外，img 还可以通过 height 和 width 属性来改变图片的长度和宽度。 需要注意的是，和上面所有的标签不同，&lt;img&gt; 不需要 &lt;/img&gt; 来结尾。 我们来举一个栗子🌰： &lt;img src=&quot;image/my_family.jpg&quot; alt=&quot;A photo of my family in 2005&quot; height=&quot;300&quot; width=&quot;200&quot;&gt; 上面这行代码需要注意的是，属性之间不需要逗号来间隔。height 和 width 的默认单位是像素 (pixels)。 宽度（width）就可以了，因为浏览器默认图片长宽比保持不变。 3.4.2.2 figure 与 figcaption 说到 &lt;img&gt; 我们就不得不提到 &lt;figure&gt;。&lt;figure&gt; 和 &lt;/figure&gt; 之间除了可以放图片，还能放诗，代码块等。只要你觉得一些内容可以当成一个图像来看待，你就可以将其放到&lt;figure&gt; 和 &lt;/figure&gt; 之间。比如 wangdachui.html 就把作品简介之下的表格放在了 &lt;figure&gt; 和 &lt;/figure&gt; 之间。 有一点需要注意：即使把 &lt;figure&gt; 和 &lt;/figure&gt; 去掉，浏览器显示的内容并不会有任何改变。 &lt;figure&gt; 最常见的用法是和 &lt;img&gt;及&lt;figcaption&gt; 一起用，这样可以在图片下面加上说明文字。比如： &lt;figure&gt; &lt;img src=&quot;images/home.png&quot; alt=&quot;Home Icon&quot; height=&quot;200&quot;&gt; &lt;figcaption&gt;以上图标来自 https://tillamookhabitat.org/wp-content/uploads/2017/03/home-icon-1030x541.png&lt;/figcaption&gt; &lt;/figure&gt; 以上图标来自 https://tillamookhabitat.org/wp-content/uploads/2017/03/home-icon-1030x541.png 3.4.2.3 Table 目前你只需要知道，table, th, tr, td 可以设置表格。其中，th （或者thead, 这两个一样）设置表头单元格，tr 设置行(row), td 设置具体的单元格。 比如， &lt;table&gt; &lt;tr&gt; &lt;th&gt;苏轼&lt;/th&gt; &lt;th&gt;李白&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;宋朝&lt;/td&gt; &lt;td&gt;唐朝&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;《念奴娇·赤壁怀》古&lt;/td&gt; &lt;td&gt;静夜思&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; 苏轼 李白 男 男 北宋 唐朝 《念奴娇·赤壁怀古》、《水调歌头-明月几时有》 《静夜思》、《蜀道难》 此外，还可以通过 colspan 和 rowspan来合并单元格，也可以用 &lt;caption&gt; 在表格开头设置文字说明。这里不展开讲，如有兴趣，参考这里。 3.4.2.4 blockquote &lt;blockquote&gt; 可以用来设置引用，比如： &lt;blockquote&gt; &lt;p&gt; 这话不是我说的。— 鲁迅&lt;/p&gt; &lt;/blockquote&gt; 这话不是我说的。— 鲁迅 3.4.2.5 span 和 div span 的字面意思是「横跨」，div 是 division (区域、部分)。这两个在下面我们讲解 CSS 时会经常用到。现在你只需要知道，这两个都是把一个部分围绕起来。比如，我有两个段落，我想让第一段的字都用红色，第二段的字都用蓝色，那么，我可以： &lt;div style=&quot;color:red&quot;&gt; &lt;p&gt;第一段文字，红色&lt;/p&gt; &lt;/div&gt; &lt;div style=&quot;color:blue&quot;&gt; &lt;p&gt;第二段文字，蓝色&lt;/p&gt; &lt;/div&gt; 第一段文字，红色 第二段文字，蓝色 当然，我也可以用 span： &lt;span style=&quot;color:red&quot;&gt; &lt;p&gt;第一段文字，红色&lt;/p&gt; &lt;/span&gt; &lt;span style=&quot;color:blue&quot;&gt; &lt;p&gt;第二段文字，蓝色&lt;/p&gt; &lt;/span&gt; 第一段文字，红色 第二段文字，蓝色 3.4.2.6 注释 在 &lt;!-- 和 --&gt; 之间插入注释。这个注释在 HTML 页面中不会显示。只有你用文本编辑器打开这个 HTML 文件时才会看到。 &lt;!-- 这里插入评语或注释，在 HTML 页面中不会显示。只有你用文本编辑器打开这个 HTML 文件时才会看到。--&gt; "],["css.html", "第 4 章 CSS 基础 4.1 方法一 4.2 方法二 4.3 方法三", " 第 4 章 CSS 基础 这一章我们来讲 CSS。CSS 的全程是 Cascading Style Sheets，翻译成中文是层叠样式表。这一章我不打算讲的很细（我自己也只懂一点）。我会把最基础的内容，比如，CSS 的三种设置方式讲解清楚，至于更细节的内容，我会贴出我觉得比较好的教程，你可以做参考。 CSS 是用来干什么的呢？ 回答这个问题之前，请用浏览器打开在上一章（第三章）你导出的那个不带格式的 wangdachui.html 文件。考虑几个很实际的问题，我们想把各级标题和图片居中怎么弄？标题和文本想用不同的字体弄么设置？段落间距我想更大一些呢？想把背景换一个颜色或者用一张图片当背景怎么弄？ 这些想法都可以用 CSS 来实现。 我们首先来讲一下 CSS 的三种设置方式。 现在有一个任务：我想把 wangdachui.html 这个文档的背景改成黑色，文字改成白色，其中「王大锤简历」这五个字用红色, 「出演作品」这四个字用橘黄色。我们用 CSS 来完成这一任务。 Figure 4.1: CSS 其实挺让人头大的 动图出处：https://i.pinimg.com/originals/81/d2/bf/81d2bffd2d12c8275ab2c708b3fd5297.gif 4.1 方法一 最直接的方法是直接改 &lt;body&gt; 、「王大锤简历」、「出演作品」的样式。 &lt;body&gt; 和 &lt;/body&gt; 之间的内容是我们用浏览器打开文件后能看到的内容。我们想把文档背景色改成黑色，文字改成白色，改动的内容是全部的文档，所以我们要动 &lt;body&gt;: &lt;html&gt; &lt;head&gt; &lt;title&gt;wangdachui&lt;/title&gt; &lt;/head&gt; &lt;body style=&quot;background-color:black; color:white&quot;&gt; &lt;h1&gt;王大锤简历&lt;/h1&gt; ... ... &lt;/body&gt; &lt;/html&gt; 现在用浏览器打开，背景色和文本颜色已经改变了。现在，我们要把「王大锤简历」这五个字改成红色： &lt;h1 style=&quot;color:red&quot;&gt;王大锤简历&lt;/h1&gt; 把「出演作品」改成橘黄色： &lt;p style=&quot;color:orange&quot;&gt;出演作品&lt;/p&gt; 改好了。 这种方法的优点是简单，快速。但是，当 HTML 中有很多内容都需要修改样式时，用这种方法会把 HTML 文档弄得乱七八糟，自己都不想看。 4.2 方法二 第二种方法是在 &lt;head&gt; 和 &lt;/head&gt; 之间加入 CSS： &lt;html&gt; &lt;head&gt; &lt;style type=&quot;text/css&quot;&gt; body { background-color: black; color: white; } h1 { color:red; } &lt;/style&gt; &lt;title&gt;wangdachui&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;王大锤简历&lt;/h1&gt; ... ... &lt;/body&gt; &lt;/html&gt; 上面的代码就把背景、文本颜色、和「王大锤简历」这五个字的颜色改好了。这里需要注意的是，我们不能直接用 p {color:orange} 来修改「出演作品」的文本颜色，为什么呢？ 这里需要讲一下，body、h1、h2、p 这些叫「标签」或者 HTML 「元素」。上面的代码我们可以直接定义 body 和 h1 的样式，是因为在 wangdachui.html 中，body 和 h1 只有一个。但是 p 有好多个。直接用 p {color:orange} 的话，所有的被 &lt;p&gt;&lt;/p&gt; 包围的内容都会变成橘黄色，这不是我们想要的。 现在的问题是，我们如何只定义 &lt;p&gt;出演作品&lt;/p&gt; 这一行的样式呢？这就需要用到「类」，即 class。 我们可以给 &lt;p&gt;出演作品&lt;/p&gt;分配一个 class, 比如 class = \"orange-text\"，然后定义这个 class 的样式，「出演作品」这四个字的样式也就改变了。 第一步是： &lt;p class=&quot;orange-text&quot;&gt;出演作品&lt;/p&gt; 第二步： &lt;html&gt; &lt;head&gt; &lt;style type=&quot;text/css&quot;&gt; body { background-color: black; color: white; } h1 { color:red; } .text-orange { color: orange; } &lt;/style&gt; &lt;title&gt;wangdachui&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;王大锤简历&lt;/h1&gt; ... ... &lt;/body&gt; &lt;/html&gt; 这个知识点非常重要，因为在 CSS 中，「类」我们经常会用到。 讲到「类」，有两个点需要注意： 一个「类」可以被多个不同元素多次使用。比如，我们想「个人照片」这几个字也改成橘黄色，那么只需要： &lt;h2 class=&quot;text-orange&quot;&gt;个人照片&lt;/h2&gt; 这样，只有这一个二级标题会变成橘黄色（别的二级标题，比如「基本信息」则不变）。 多个类可以放在一起 比如，你不仅想让「个人照片」这四个字变成橘黄色，还想让这四个字和它下面的内容隔开（比如，相隔 300 个像素）。直接修改 text-orange 是不行的，那么做的话「出演作品」的样式也会被修改。 这时候，我们可以给 &lt;h2&gt;个人照片&lt;/h2&gt; 多加一个「类」： &lt;h2 class=&quot;text-orange go-down&quot;&gt;个人照片&lt;/h2&gt; 两个「类」之间需要有一个空格，浏览器会自动识别出这是两个不同的「类」。 然后，在 CSS 中添加： .go-down { margin-bottom: 300px; } 直接写成 .go-down {margin-bottom: 300px} 也可以，第一种方法看起来更直观。 讲到这里，顺带讲一下，两个「选择器」可以同时被定义。什么是选择器呢？h1 {color:red;} 和 .go-down {margin-bottom: 300px} 中，h1 和 .go-down 都叫做选择器，前者叫「元素选择器」，因为是 HTML 自带的元素，比如 body, h1, p 等，后者叫「类选择器」。 假设我们现在想把「常用语」这三个字也改成红色。我们可以给它加一个「类」： &lt;h2 class=&quot;text-red&quot;&gt;常用语&lt;/h2&gt; 然后，在上面的 CSS 中，直接用： h1， .text-red { color:red; } 4.3 方法三 第三种方法，也是比较推荐，也常用的方法，是在 head 中加入一个外部链接： &lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt; &lt;/head&gt; 在文本编辑器中新建一个文档，将其命名为 style.css（你可以用任何你喜欢的名字），加入以下内容： body { background-color: black; color: white; } h1, .text-red { color:red; } .text-orange { color: orange; } .go-down { margin-bottom: 300px; } CSS 到这里就讲完了。当然，我只讲了框架。具体的细节一本书都写不完。 以上内容参考 安用烈老师 的教程 (HTML &amp; CSS Basics)。 列几个可能有用的资料： MDN CSS 基础 这个教程写得很好，强烈推荐！ LiHongyao css 基础知识总结 HTML 中文网 CSS基础知识点总结 "]]
