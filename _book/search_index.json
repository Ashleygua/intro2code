[["prep.html", "实用编程入门指南 第 1 章 前期准备 1.1 GitHub 1.2 终端 1.3 文本编辑器 1.4 英语", " 实用编程入门指南 郝鸿涛 2021-01-21 第 1 章 前期准备 1.1 GitHub 请注册一个 GitHub 账号，编程的入门票。用户名请认真起。如果你之后建个人网站不想买域名的话，你可以用免费的 你的用户名.github.io。所以如果用户名起得很丑的话，你个人网站的未来网址相应地也会很丑。 1.2 终端 如果你用的是苹果系统或者 Linux 系统，终端 (Terminal) 是自带的。如果你用的是 Windows 系统，终端的选取可以看看 这个讨论。我不怎么用 Windows，所以不是特别了解。上述讨论中 powershell, cmder, wsltty 和 git bash 出现的频率比较高。你可以自己试试看哪个好用。 1.3 文本编辑器 文本编辑器 (Text Editor) 是程序员用来吃饭的家伙。每个人的喜好不同，Sublime Text, VS Code 和 vim 这三个貌似很多人用，而且也都是免费的。我比较习惯用 Sublime Text。 1.4 英语 如果你对编程是认真的，不要抗拒学英语。你现在看到的主要编程语言，Java, Python, Ruby, Go, JavaScript, R, C 等都是西方人创造的，因此最主要和最新的学习资料肯定是英文的。编译类的教材在一定程度上可以缓解这个问题，但当资料非常新的时候，你只能眼巴巴地等翻译。其次，GitHub 上主要开源项目的文档是英文的，这个估计不会有人会去翻译。如果你看不懂，就没办法使用，在使用中碰到问题也没办法跟原作者沟通。另外，学编程就是一个持续不断碰到问题、解决问题的过程，而很多你碰到的问题早就有人在 StackOverflow上（用英语）问过和回答过了。 "],["markdown.html", "第 2 章 Markdown 试水 2.1 Markdown 编辑器 2.2 Markdown 语法讲解 2.3 Markdown 练习", " 第 2 章 Markdown 试水 一提到办公，从小被要求学 Word, Excel, 和 PowerPoint 的大多数人也就是能想到这三种工具了。放到十年前，也许没什么问题，但是现在我们并非离开它们就活不下去了。而且，对编程来说，这几样工具并不是最合适的。 我们先来看处理文字的一项利器： Markdown. Markdown 相比 Word 有什么好处呢？第一，非常简单，5分钟就能学会。第二，Markdown 就是为网页而生的，应用型极强。配合 Rmarkdown 和 Pandoc 等工具，Markdown 可以非常便捷地在 HTML 和 PDF 之间转化。Markdown 的文件格式缩写是 md。 以下两篇文章非常好地总结了 Markdown 的基本语法： Markdown 是个啥, 来自统计之都，作者是 谢益辉 Markdown 基本语法, 作者是 younghz 如果你不介意看英文资料的话， Markdown Cheatsheet，作者是 adam-p 2.1 Markdown 编辑器 你可以用上一节提到的文本编辑器来写 Markdown 文件，缺点是你看不到实时的结果。如果你想看到实时的效果，我推荐用 Typora, 开源、轻巧、免费、主题多样，而且可以非常方便得转成 HTML 和 PDF。你也可以在 stackedit.io 在线写 Markdown 文件。如果你平常用 Markdown 比较多，推荐用 Typora 在本地写。不过我自己很少用 Typora, 实时预览的效果的确好，但是当你想修改内容的时候，你会发现很不方便。 想看一下效果的话，你可以看看我用 Typora 写的 Markdown 文本，转成 HTML 和 PDF 后的样子。 2.2 Markdown 语法讲解 2.2.1 标题 如下所示，第几级标题就在前面加几个 # 号。 # 第一级标题 ## 第二级标题 ### 第三级标题 #### 第四级标题 ##### 第五级标题 ###### 第六级标题 2.2.2 粗体、斜体 - **粗体** - *斜体* - ***粗斜体*** - ~~删除~~ 粗体 斜体 粗斜体 删除 2.2.3 列表 - Water 列表内想有缩进内容，但是不想让内容前有列表标记的话，只需要在这一行空三格。 - Water - Water 1. Water 2. Water 3. Water - Water - Water - Water - Water 1. Water 2. Water Water 列表内想有缩进内容，但是不想让内容前有列表标记的话，只需要在这一行空三格。 Water Water Water Water Water Water Water Water Water Water Water 如果你想让列表内容空格大一些，只需要在每行之间加入空行就好。比如： - Water - Water - Water Water Water Water 2.2.4 表格 | Water | *Water* | Water | |---------|---------|---------| | Water | `Water` | Water | | **Water** | Water^[Water] | Water | | Water | Water | Water | Water Water Water Water Water Water Water Water 1 Water Water Water Water 如果你不会自己打出 Markdown 表格，可以试试这个傻瓜式 Markdown 表格生成器。 2.2.5 引语 &gt; 知之为知之，不知为不知，是知也 ^[你知道最后一个「知」怎么念吗？]。 — 孔子 知之为知之，不知为不知，是知也 2。 — 孔子 2.2.6 链接 这是[一个链接](https://github.com/). 这是一个链接, 2.2.7 插入图片 ![GitHub](https://www.analyticsvidhya.com/wp-content/uploads/2015/07/github_logo.png) GitHub 有同学会问， [] 为什么还要加内容呢？直接在 () 加入链接不就好了吗？不完全是。我一开始也不理解为什么还需要 []。现在，我的理解是，[] 里的内容是对要加入图片的解释。什么时候会用到呢？两种情况： 你输入的图片链接失效。这个其实挺常见的。除非你是本地图片，你自己可以掌控。如果像上面一样，是用的网上的链接，那这个链接随时可能失效。失效后别人就无法知道你插入的图片内容是什么。如果你在 [] 有图说的话，浏览器会在图片位置显示你的图说； 谢益辉 在 他的博客 中提到 3，[] 里面的内容可以被专用浏览器读给盲人用户。 2.2.8 代码 代码可以分成两种。一种是代码标记，比如：`Print(&quot;Nihao&quot;)` 代码可以分成两种。一种是代码标记，比如：Print(\"Nihao\") 另一种是「代码块」： // JavaScript 代码： water = [1, 2, 3, 4, 5] let a = 0; for (let i = 0; i &lt; 5; i++){ if (water[i] &gt; 3) { a += 1 } } // 请问 a 的值现在是多少呢？ 我在这里没法展示源代码，只能像上面一样展示结果。源代码可以参考 这里。 2.2.9 注释 注释只需要在需要注释文字的后面加 ^[这里输入注释文字]。这个上面其实已经有例子了。不过我再举一个： 你好吗 ^[在中国常用的问候语]？ 你好吗 4？ 2.2.10 HTML 最重要的一点，Markdown 可以识别 HTML 代码。也就是说，你把 Markdown 当成 HTML 来写也可以。 比如，插入图片时，Markdown 本身的 ![]() 是不支持你加入图片说明文字的 5。这时候你就可以直接用原生的 HTML 代码： &lt;figure&gt; &lt;img src=&quot;https://www.analyticsvidhya.com/wp-content/uploads/2015/07/github_logo.png&quot; alt=&quot;GitHub&quot;/&gt; &lt;figcaption&gt;这里添加图片说明文字&lt;/figcaption&gt; &lt;/figure&gt; 以上代码来自 https://stackoverflow.com/a/19360305。 2.2.11 分隔线 *** 或者 --- 或者 2.3 Markdown 练习 请用 Markdown 写出如下文稿。需要注意的是： 标题前、脚注上的序号不用管 个人照片下的文字「王大锤的个人照片」在最后结果中有没有无所谓 你可以在 https://stackedit.io/app# 在线制作，也可以使用 Typora 在本地制作。不过， Typora 的脚注 比较麻烦一些。 2.3.1 王大锤简历 以上是一级标题，以下全都是二级标题。 免责声明：以下内容部分参考百度百科 王大锤 这一次词条解释。 2.3.1.1 基本信息 身高：170 体重：60 公斤 6 性别：男 7 出生日期：2000年0月0日 出演作品 《万万没想到》 《暴走大事件》 2.3.1.2 个人照片 王大锤个人照片 图片出处 2.3.1.3 作品简介 角色 形象 元素 刘备 自恋 搞笑 月老童子 幻想 职场 富二代 眼高手低 感情 2.3.1.4 常用语 万万没想到 — 王大锤 Water↩︎ 你知道最后一个「知」怎么念吗？↩︎ 抱歉，我忘记具体哪一篇了↩︎ 在中国常用的问候语↩︎ 你现在看到的内容是 bookdown 渲染出来的效果，所以上面 那副图底下你能看到[] 里面的内容成了文字说明。↩︎ 注意：「公斤」是斜体。↩︎ 注意：「男」是粗体。↩︎ "],["html-basics.html", "第 3 章 HTML 基本知识 3.1 网页部署 3.2 内容更新", " 第 3 章 HTML 基本知识 如果使用 Typora 完成的之前布置的Markdown 的作业，答案请参考这里。请检查下是否和你的答案一致。 用 Typora 打开这份 Markdown 文档后，选择 文件 (File) \\(\\to\\) 导出 (Export) \\(\\to\\) HTML (without styles). 导出后的 HTML 文档应该是这样。 用浏览器打开这份 HTML 文档，你可以看到和你在 2.3 Markdown 练习中 看到的结果一致。你现在看到的就是一个最基本的网页了。 3.1 网页部署 在讲解 HTML 只是之前，我们先把刚才的网页放到网上。别人能看到的网页才是真正的网页。 第一步，在你的电脑上创建一个文件夹，将其命名为 wangdachui。然后把刚才导出的 HTML 文件重新命名为 index.html 并放到 wangdachui 这个文件夹。 第二步，请确保你已经有了一个 GitHub 账号。登陆之后，在屏幕右上角你的 GitHub 头像左侧有一个 \\(+\\) 的标志。点击它，然后选择 New repository。在出现的页面中，在 Repository name 那里填上 wangdachui 或者任何你觉得合适的名字。其它都不要动，然后点击 Create repository。在随后出现的页面中，在 “Quick setup — if you’ve done this kind of thing before” 下面那一行，HTTP/SSH 后面有个网址，应该是 https://github.com/hongtaoh/wangdachui.git 这样的形式。把这个网址复制下来。 Figure 3.1: 登陆 GitHub 之后，选择 New repository Figure 3.2: 新建仓库设置 Figure 3.3: 新建仓库 URL 第三步，打开你电脑上的终端。苹果电脑请打开 Terminal, 如果你连 Terminal 怎么打开都不知道，请看这里。使用Windows 系统的同学，打开你选择的终端工具。 打开终端之后： 如果你是第一次使用 git, 你可能需要设置一些内容。在终端输入 git config --global user.name \"你的git用户名\", 以及 git config --global user.email \"你的邮箱\"。用你的 GitHub 用户名和与 GitHub 绑定的邮箱应该就可以。不懂的话，请参考 这里 或 这里。 使用苹果电脑的同学，我建议你把 wangdachui 这个文件夹拖到桌面上，然后在 Terminal 中输入： cd Desktop/wangdachui 使用 Windowns 系统的同学，如果你选择使用 PowerShell, 请先阅读 这里。PowerShell 配备了 Git 之后，终端才能执行以下的代码。 使用 Windowns 系统的同学，打开了 Cmder 或其它终端后，加入你把 wangdachui 这个文件夹在你的 H 盘，那么，请在 Cmder 或其它终端中输入： cd H:\\wangdachui 如果你不确定路径是什么，输完 cd 之后，按一下空格，然后直接把 wangdachui 这个文件夹拖到终端中，路径会自动显示出来。 cd 是英文 change directory 的缩写。change directory 的意思是「改变路径」，也就是告诉终端之后我们要输入的代码要作用于哪一个项目。 现在，请拿出刚才你复制的类似 https://github.com/hongtaoh/wangdachui.git 的网址链接，我们接下来要用到。如果你的仓库名也是 wangdachui 的话，那么 https://github.com/hongtaoh/wangdachui.git 这个链接中你只需要把我的 GitHub 用户名 hongtaoh 换成你的就行。 随后，不管你的电脑是什么系统，请在你的终端中输入： git init git add . git commit -m &quot;my first commit.&quot; git remote add origin https://github.com/hongtaoh/wangdachui.git # 请注意，https://github.com/hongtaoh/wangdachui.git 一定要替换为你自己的链接！！！ git push -u origin master 这个代码块你直接复制粘贴就行。粘贴完之后，别忘记按一下回车键。 上面几行代码需要注意的是： git init 是创建一个 git 项目。init 应该是 initiate 的缩写。 git add .: 最后的那个点请不要忘记。那个点和 add 之间的空格也不要落下。这行代码是告诉 git，刚才新加的全部内容都要上传。 git commit -m \"my first commit.\" 是为这次上传添加备注。一个 git 项目我们可能要上传很多次，每次上传不同的内容。给每次上传添加备注可以让我们之后了解每次上传的内容是什么。 第四行代码一定要替换为你自己的链接！！！！！！ 上面的代码运行结束后，刷新你的 GitHub 页面，不出意外的化，你会看到 index.html 已经躺在你刚创建的仓库里了。 Figure 3.4: index.html 上传成功的页面 现在，请点击上面那个图片中的 Settings。进入 Settings 页面后，一直往下拖，到你看到 GitHub Pages 为止。在 Source 下面，点击那个 None, 选择 master, 在 master 右侧那里选择 /(root), 然后点击 Save, 你应该能看到 “Your site is ready to be published at http://你的用户名.github.io/wangdachui/”。稍微等一分钟，刷新网页，当这行字变为绿底，内容变为 “Your site is published at …” 时，点击那个网址，不出意外的话，你应该就能看到我们刚才那个网页内容了。现在，这个网页别人也能看到了。 Figure 3.5: 点击 None, 选择 master Figure 3.6: 部署成功后的页面 3.2 内容更新 "]]
